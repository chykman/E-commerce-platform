name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install dependencies
        run: npm install
      - name: Run tests
        run: npm test
      - name: Build application
        run: npm run build
   
 
#       - name: Build Docker image
#         run: docker build -t ecommerce-app:latest .
#       - name: Push Docker image to DockerHub
#         run: |
#           echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
#           docker tag ecommerce-app:latest your-dockerhub-username/ecommerce-app:latest
#           docker push your-dockerhub-username/ecommerce-app:latest
#
#   docker:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3
#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2
#       - name: Log in to DockerHub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}
#       - name: Build and push Docker image
#         uses: docker/build-push-action@v4
#         with:
#           context: .
#           file: ./Dockerfile
#           push: true
#           tags: your-dockerhub-username/ecommerce-app:latest
#   deploy:
#     needs: build
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3
#       - name: Set up Kubernetes config
#         run: echo "${{ secrets.KUBECONFIG }}" | base64 --decode > $HOME/.kube/config
#       - name: Deploy to Kubernetes
#         run: |
#           kubectl apply -f deployment/
#           kubectl rollout status deployment ecommerce  
